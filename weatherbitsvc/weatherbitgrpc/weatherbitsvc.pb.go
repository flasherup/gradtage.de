// Code generated by protoc-gen-go. DO NOT EDIT.
// source: weatherbitsvc.proto

package weathergrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Temperature struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Temperature          float64  `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Temperature) Reset()         { *m = Temperature{} }
func (m *Temperature) String() string { return proto.CompactTextString(m) }
func (*Temperature) ProtoMessage()    {}
func (*Temperature) Descriptor() ([]byte, []int) {
	return fileDescriptor_weatherbitsvc_764efd3119f2ee25, []int{0}
}
func (m *Temperature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temperature.Unmarshal(m, b)
}
func (m *Temperature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temperature.Marshal(b, m, deterministic)
}
func (dst *Temperature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temperature.Merge(dst, src)
}
func (m *Temperature) XXX_Size() int {
	return xxx_messageInfo_Temperature.Size(m)
}
func (m *Temperature) XXX_DiscardUnknown() {
	xxx_messageInfo_Temperature.DiscardUnknown(m)
}

var xxx_messageInfo_Temperature proto.InternalMessageInfo

func (m *Temperature) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Temperature) GetTemperature() float64 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

type Temperatures struct {
	Temps                []*Temperature `protobuf:"bytes,1,rep,name=temps,proto3" json:"temps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Temperatures) Reset()         { *m = Temperatures{} }
func (m *Temperatures) String() string { return proto.CompactTextString(m) }
func (*Temperatures) ProtoMessage()    {}
func (*Temperatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_weatherbitsvc_764efd3119f2ee25, []int{1}
}
func (m *Temperatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temperatures.Unmarshal(m, b)
}
func (m *Temperatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temperatures.Marshal(b, m, deterministic)
}
func (dst *Temperatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temperatures.Merge(dst, src)
}
func (m *Temperatures) XXX_Size() int {
	return xxx_messageInfo_Temperatures.Size(m)
}
func (m *Temperatures) XXX_DiscardUnknown() {
	xxx_messageInfo_Temperatures.DiscardUnknown(m)
}

var xxx_messageInfo_Temperatures proto.InternalMessageInfo

func (m *Temperatures) GetTemps() []*Temperature {
	if m != nil {
		return m.Temps
	}
	return nil
}

type GetPeriodRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Start                string   `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  string   `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeriodRequest) Reset()         { *m = GetPeriodRequest{} }
func (m *GetPeriodRequest) String() string { return proto.CompactTextString(m) }
func (*GetPeriodRequest) ProtoMessage()    {}
func (*GetPeriodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_weatherbitsvc_764efd3119f2ee25, []int{2}
}
func (m *GetPeriodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeriodRequest.Unmarshal(m, b)
}
func (m *GetPeriodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeriodRequest.Marshal(b, m, deterministic)
}
func (dst *GetPeriodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeriodRequest.Merge(dst, src)
}
func (m *GetPeriodRequest) XXX_Size() int {
	return xxx_messageInfo_GetPeriodRequest.Size(m)
}
func (m *GetPeriodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeriodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeriodRequest proto.InternalMessageInfo

func (m *GetPeriodRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetPeriodRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *GetPeriodRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type GetPeriodResponse struct {
	Temps                map[string]*Temperatures `protobuf:"bytes,1,rep,name=temps,proto3" json:"temps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Err                  string                   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetPeriodResponse) Reset()         { *m = GetPeriodResponse{} }
func (m *GetPeriodResponse) String() string { return proto.CompactTextString(m) }
func (*GetPeriodResponse) ProtoMessage()    {}
func (*GetPeriodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_weatherbitsvc_764efd3119f2ee25, []int{3}
}
func (m *GetPeriodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeriodResponse.Unmarshal(m, b)
}
func (m *GetPeriodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeriodResponse.Marshal(b, m, deterministic)
}
func (dst *GetPeriodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeriodResponse.Merge(dst, src)
}
func (m *GetPeriodResponse) XXX_Size() int {
	return xxx_messageInfo_GetPeriodResponse.Size(m)
}
func (m *GetPeriodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeriodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeriodResponse proto.InternalMessageInfo

func (m *GetPeriodResponse) GetTemps() map[string]*Temperatures {
	if m != nil {
		return m.Temps
	}
	return nil
}

func (m *GetPeriodResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*Temperature)(nil), "weathergrpc.Temperature")
	proto.RegisterType((*Temperatures)(nil), "weathergrpc.Temperatures")
	proto.RegisterType((*GetPeriodRequest)(nil), "weathergrpc.GetPeriodRequest")
	proto.RegisterType((*GetPeriodResponse)(nil), "weathergrpc.GetPeriodResponse")
	proto.RegisterMapType((map[string]*Temperatures)(nil), "weathergrpc.GetPeriodResponse.TempsEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WeatherBitScraperSVCClient is the client API for WeatherBitScraperSVC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WeatherBitScraperSVCClient interface {
	GetPeriod(ctx context.Context, in *GetPeriodRequest, opts ...grpc.CallOption) (*GetPeriodResponse, error)
}

type weatherBitScraperSVCClient struct {
	cc *grpc.ClientConn
}

func NewWeatherBitScraperSVCClient(cc *grpc.ClientConn) WeatherBitScraperSVCClient {
	return &weatherBitScraperSVCClient{cc}
}

func (c *weatherBitScraperSVCClient) GetPeriod(ctx context.Context, in *GetPeriodRequest, opts ...grpc.CallOption) (*GetPeriodResponse, error) {
	out := new(GetPeriodResponse)
	err := c.cc.Invoke(ctx, "/weathergrpc.WeatherBitScraperSVC/GetPeriod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WeatherBitScraperSVCServer is the server API for WeatherBitScraperSVC service.
type WeatherBitScraperSVCServer interface {
	GetPeriod(context.Context, *GetPeriodRequest) (*GetPeriodResponse, error)
}

func RegisterWeatherBitScraperSVCServer(s *grpc.Server, srv WeatherBitScraperSVCServer) {
	s.RegisterService(&_WeatherBitScraperSVC_serviceDesc, srv)
}

func _WeatherBitScraperSVC_GetPeriod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeriodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeatherBitScraperSVCServer).GetPeriod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/weathergrpc.WeatherBitScraperSVC/GetPeriod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeatherBitScraperSVCServer).GetPeriod(ctx, req.(*GetPeriodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WeatherBitScraperSVC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "weathergrpc.WeatherBitScraperSVC",
	HandlerType: (*WeatherBitScraperSVCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPeriod",
			Handler:    _WeatherBitScraperSVC_GetPeriod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "weatherbitsvc.proto",
}

func init() { proto.RegisterFile("weatherbitsvc.proto", fileDescriptor_weatherbitsvc_764efd3119f2ee25) }

var fileDescriptor_weatherbitsvc_764efd3119f2ee25 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0x87, 0x5f, 0xb7, 0x6f, 0x91, 0x72, 0x61, 0x28, 0xa6, 0x43, 0xa8, 0x04, 0x8a, 0x32, 0x95,
	0x81, 0x54, 0x2a, 0x0b, 0x62, 0x00, 0x89, 0x0a, 0xb1, 0x74, 0x40, 0x2e, 0x82, 0x39, 0x7f, 0x8e,
	0x34, 0x82, 0xd6, 0xc1, 0xbe, 0x14, 0xf5, 0xb3, 0xf1, 0xe5, 0x90, 0xed, 0x88, 0xa6, 0x42, 0x65,
	0xfb, 0xdd, 0xf9, 0xc9, 0xf9, 0xc9, 0x19, 0x8e, 0x3f, 0x31, 0xa1, 0x05, 0xaa, 0xb4, 0x24, 0xbd,
	0xce, 0xe2, 0x4a, 0x49, 0x92, 0xdc, 0x6f, 0x9a, 0x85, 0xaa, 0xb2, 0xe1, 0x45, 0x51, 0xd2, 0xa2,
	0x4e, 0xe3, 0x4c, 0x2e, 0xc7, 0x85, 0x2c, 0xe4, 0xd8, 0x32, 0x69, 0xfd, 0x6a, 0x2b, 0x5b, 0xd8,
	0xe4, 0xbe, 0x8d, 0xa6, 0xe0, 0x3f, 0xe1, 0xb2, 0x42, 0x95, 0x50, 0xad, 0x90, 0x73, 0xf8, 0x9f,
	0x27, 0x84, 0x01, 0x0b, 0xd9, 0xc8, 0x13, 0x36, 0xf3, 0x10, 0x7c, 0xda, 0x22, 0x41, 0x27, 0x64,
	0x23, 0x26, 0xda, 0xad, 0xe8, 0x06, 0x0e, 0x5b, 0x43, 0x34, 0x8f, 0xa1, 0x67, 0x8e, 0x75, 0xc0,
	0xc2, 0xee, 0xc8, 0x9f, 0x04, 0x71, 0x4b, 0x30, 0x6e, 0x91, 0xc2, 0x61, 0xd1, 0x0c, 0xfa, 0x0f,
	0x48, 0x8f, 0xa8, 0x4a, 0x99, 0x0b, 0xfc, 0xa8, 0x51, 0x13, 0xef, 0x43, 0xb7, 0xcc, 0xdd, 0x04,
	0x4f, 0x98, 0xc8, 0x07, 0xd0, 0xd3, 0x94, 0x28, 0xb2, 0x06, 0x9e, 0x70, 0x85, 0xe1, 0x70, 0x95,
	0x07, 0x5d, 0xdb, 0x33, 0x31, 0xfa, 0x62, 0x70, 0xd4, 0x1a, 0xa7, 0x2b, 0xb9, 0xd2, 0xc8, 0x6f,
	0x77, 0x9d, 0xce, 0x77, 0x9c, 0x7e, 0xe1, 0xd6, 0x52, 0xdf, 0xaf, 0x48, 0x6d, 0x1a, 0x49, 0x7b,
	0x91, 0x52, 0xcd, 0xe5, 0x26, 0x0e, 0xe7, 0x00, 0x5b, 0xcc, 0x9c, 0xbf, 0xe1, 0xa6, 0xd9, 0x9c,
	0x89, 0x7c, 0x0c, 0xbd, 0x75, 0xf2, 0x5e, 0xbb, 0x95, 0xf9, 0x93, 0x93, 0x7d, 0x6b, 0xd0, 0xc2,
	0x71, 0xd7, 0x9d, 0x2b, 0x36, 0xc9, 0x61, 0xf0, 0xe2, 0xb0, 0xbb, 0x92, 0xe6, 0x99, 0x4a, 0x2a,
	0x54, 0xf3, 0xe7, 0x29, 0x9f, 0x81, 0xf7, 0x63, 0xc9, 0x4f, 0xf7, 0xd9, 0xdb, 0xdd, 0x0d, 0xcf,
	0xfe, 0xfe, 0xb9, 0xe8, 0x5f, 0x7a, 0x60, 0x5f, 0xff, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x99,
	0xf7, 0x0d, 0xad, 0x50, 0x02, 0x00, 0x00,
}
