// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autocompletesvc.proto

package acrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetAutocompleteRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAutocompleteRequest) Reset()         { *m = GetAutocompleteRequest{} }
func (m *GetAutocompleteRequest) String() string { return proto.CompactTextString(m) }
func (*GetAutocompleteRequest) ProtoMessage()    {}
func (*GetAutocompleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_autocompletesvc_39264745a093dd5a, []int{0}
}
func (m *GetAutocompleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAutocompleteRequest.Unmarshal(m, b)
}
func (m *GetAutocompleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAutocompleteRequest.Marshal(b, m, deterministic)
}
func (dst *GetAutocompleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAutocompleteRequest.Merge(dst, src)
}
func (m *GetAutocompleteRequest) XXX_Size() int {
	return xxx_messageInfo_GetAutocompleteRequest.Size(m)
}
func (m *GetAutocompleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAutocompleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAutocompleteRequest proto.InternalMessageInfo

func (m *GetAutocompleteRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type GetAutocompleteResponse struct {
	Result               map[string]string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Err                  string            `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAutocompleteResponse) Reset()         { *m = GetAutocompleteResponse{} }
func (m *GetAutocompleteResponse) String() string { return proto.CompactTextString(m) }
func (*GetAutocompleteResponse) ProtoMessage()    {}
func (*GetAutocompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_autocompletesvc_39264745a093dd5a, []int{1}
}
func (m *GetAutocompleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAutocompleteResponse.Unmarshal(m, b)
}
func (m *GetAutocompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAutocompleteResponse.Marshal(b, m, deterministic)
}
func (dst *GetAutocompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAutocompleteResponse.Merge(dst, src)
}
func (m *GetAutocompleteResponse) XXX_Size() int {
	return xxx_messageInfo_GetAutocompleteResponse.Size(m)
}
func (m *GetAutocompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAutocompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAutocompleteResponse proto.InternalMessageInfo

func (m *GetAutocompleteResponse) GetResult() map[string]string {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetAutocompleteResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAutocompleteRequest)(nil), "acrpc.GetAutocompleteRequest")
	proto.RegisterType((*GetAutocompleteResponse)(nil), "acrpc.GetAutocompleteResponse")
	proto.RegisterMapType((map[string]string)(nil), "acrpc.GetAutocompleteResponse.ResultEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AutocompleteSVCClient is the client API for AutocompleteSVC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AutocompleteSVCClient interface {
	GetAutocomplete(ctx context.Context, in *GetAutocompleteRequest, opts ...grpc.CallOption) (*GetAutocompleteResponse, error)
}

type autocompleteSVCClient struct {
	cc *grpc.ClientConn
}

func NewAutocompleteSVCClient(cc *grpc.ClientConn) AutocompleteSVCClient {
	return &autocompleteSVCClient{cc}
}

func (c *autocompleteSVCClient) GetAutocomplete(ctx context.Context, in *GetAutocompleteRequest, opts ...grpc.CallOption) (*GetAutocompleteResponse, error) {
	out := new(GetAutocompleteResponse)
	err := c.cc.Invoke(ctx, "/acrpc.AutocompleteSVC/GetAutocomplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AutocompleteSVCServer is the server API for AutocompleteSVC service.
type AutocompleteSVCServer interface {
	GetAutocomplete(context.Context, *GetAutocompleteRequest) (*GetAutocompleteResponse, error)
}

func RegisterAutocompleteSVCServer(s *grpc.Server, srv AutocompleteSVCServer) {
	s.RegisterService(&_AutocompleteSVC_serviceDesc, srv)
}

func _AutocompleteSVC_GetAutocomplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAutocompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutocompleteSVCServer).GetAutocomplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/acrpc.AutocompleteSVC/GetAutocomplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutocompleteSVCServer).GetAutocomplete(ctx, req.(*GetAutocompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AutocompleteSVC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "acrpc.AutocompleteSVC",
	HandlerType: (*AutocompleteSVCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAutocomplete",
			Handler:    _AutocompleteSVC_GetAutocomplete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "autocompletesvc.proto",
}

func init() {
	proto.RegisterFile("autocompletesvc.proto", fileDescriptor_autocompletesvc_39264745a093dd5a)
}

var fileDescriptor_autocompletesvc_39264745a093dd5a = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0x2c, 0x2d, 0xc9,
	0x4f, 0xce, 0xcf, 0x2d, 0xc8, 0x49, 0x2d, 0x49, 0x2d, 0x2e, 0x4b, 0xd6, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x4d, 0x4c, 0x2e, 0x2a, 0x48, 0x56, 0xd2, 0xe1, 0x12, 0x73, 0x4f, 0x2d, 0x71,
	0x44, 0x52, 0x12, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0x24, 0xc4, 0xc5, 0x52, 0x92, 0x5a,
	0x51, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x2b, 0xad, 0x62, 0xe4, 0x12, 0xc7,
	0x50, 0x5e, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0xe4, 0xc4, 0xc5, 0x56, 0x94, 0x5a, 0x5c, 0x9a,
	0x03, 0xd2, 0xc1, 0xac, 0xc1, 0x6d, 0xa4, 0xa5, 0x07, 0xb6, 0x41, 0x0f, 0x87, 0x7a, 0xbd, 0x20,
	0xb0, 0x62, 0xd7, 0xbc, 0x92, 0xa2, 0xca, 0x20, 0xa8, 0x4e, 0x21, 0x01, 0x2e, 0xe6, 0xd4, 0xa2,
	0x22, 0x09, 0x26, 0xb0, 0x95, 0x20, 0xa6, 0x94, 0x25, 0x17, 0x37, 0x92, 0x42, 0x90, 0x82, 0xec,
	0xd4, 0x4a, 0xa8, 0x9b, 0x40, 0x4c, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xc4, 0x9c, 0xd2, 0x54, 0xa8,
	0x26, 0x08, 0xc7, 0x8a, 0xc9, 0x82, 0xd1, 0x28, 0x95, 0x8b, 0x1f, 0xd9, 0xe2, 0xe0, 0x30, 0x67,
	0xa1, 0x20, 0x2e, 0x7e, 0x34, 0xe7, 0x08, 0xc9, 0xe2, 0x72, 0x26, 0x38, 0x14, 0xa4, 0xe4, 0xf0,
	0xfb, 0x42, 0x89, 0x21, 0x89, 0x0d, 0x1c, 0x9e, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5,
	0xbe, 0xb7, 0x4d, 0x68, 0x01, 0x00, 0x00,
}
